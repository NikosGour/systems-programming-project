services:
    api:
        image: systems_programming:latest
        build:
            context: ./recommender
            dockerfile: Dockerfile
        ports:
            - "${PORT}:${PORT}"
        environment:
            - RABBITMQ_URI=messaging
        restart: on-failure
        depends_on:
            messaging:
                condition: service_healthy

    data_generation:
        build:
            context: .
            dockerfile: ./data_generation/Dockerfile
        environment:
            - RABBITMQ_URI=messaging
        restart: on-failure
        depends_on:
            messaging:
                condition: service_healthy
            api:
                condition: service_started

    data_storage:
        build:
            context: ./data_storage
            dockerfile: Dockerfile
        environment:
            - RABBITMQ_URI=messaging
        restart: on-failure
        depends_on:
            messaging:
                condition: service_healthy

    messaging:
        image: rabbitmq:3.13-management
        ports:
            - "15672:15672"
            - "5672:5672"
        environment:
            RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
            RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
        healthcheck:
            test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
            interval: 20s
            timeout: 20s
            retries: 3

