services:
    api:
        image: systems_programming:latest
        build:
            context: ./recommender
            dockerfile: Dockerfile
        ports:
            - "${PORT}:${PORT}"
        environment:
            - RABBITMQ_URI=messaging
        restart: on-failure
        depends_on:
            messaging:
                condition: service_healthy

    data_generation:
        build:
            context: .
            dockerfile: ./data_generation/Dockerfile
        environment:
            - RABBITMQ_URI=messaging
        restart: on-failure
        depends_on:
            messaging:
                condition: service_healthy
            api:
                condition: service_started

    data_storage:
        build:
            context: ./data_storage
            dockerfile: Dockerfile
        environment:
            - RABBITMQ_URI=messaging
            - MYSQL_URI=mysql_db
        restart: on-failure
        depends_on:
            messaging:
                condition: service_healthy
            mysql_db:
                condition: service_healthy

    messaging:
        image: rabbitmq:3.13-management
        ports:
            - "15672:15672"
            - "5672:5672"
        environment:
            - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
            - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
        healthcheck:
            test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
            interval: 20s
            timeout: 20s
            retries: 3

    mysql_db:
        image: mysql:5.7.43
        ports:
            - "3306:3306"
        environment:
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            MYSQL_DATABASE: ${MYSQL_DATABASE}
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
            timeout: 20s
            interval: 20s
            retries: 5
        volumes:
            - database_data:/var/lib/mysql

volumes:
    database_data:

